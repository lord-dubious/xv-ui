{
    "openapi": "3.1.0",
    "info": {
        "title": "Browser Use Cloud",
        "summary": "Browser Use API for hosting agents",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "https://api.browser-use.com",
            "description": "Production"
        }
    ],
    "paths": {
        "/api/v1/run-task": {
            "post": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Run Task",
                "description": "Requires an active subscription. Returns the task ID that can be used to track progress.",
                "operationId": "run_task_api_v1_run_task_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunTaskRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskCreatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/stop-task": {
            "put": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Stop Task",
                "description": "Stops a running browser automation task immediately. The task cannot be resumed after being stopped.\nUse `/pause-task` endpoint instead if you want to temporarily halt execution.",
                "operationId": "stop_task_api_v1_stop_task_put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/pause-task": {
            "put": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Pause Task",
                "description": "Pauses execution of a running task. The task can be resumed later using the `/resume-task` endpoint. Useful for manual intervention or inspection.",
                "operationId": "pause_task_api_v1_pause_task_put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/resume-task": {
            "put": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Resume Task",
                "description": "Resumes execution of a previously paused task. The task will continue from where it was paused. You can't resume a stopped task.",
                "operationId": "resume_task_api_v1_resume_task_put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/task/{task_id}": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Get Task",
                "description": "Returns comprehensive information about a task, including its current status, steps completed, output (if finished), and other metadata.",
                "operationId": "get_task_api_v1_task__task_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/task/{task_id}/status": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Get Task Status",
                "description": "Returns just the current status of a task (created, running, finished, stopped, or paused).\nMore lightweight than the full task details endpoint.",
                "operationId": "get_task_status_api_v1_task__task_id__status_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskStatusEnum"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/task/{task_id}/media": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Get Task Media",
                "description": "Returns links to any recordings or media generated during task execution,\nsuch as browser session recordings. Only available for completed tasks.",
                "operationId": "get_task_media_api_v1_task__task_id__media_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskMediaResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/task/{task_id}/screenshots": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Get Task Screenshots",
                "description": "Returns any screenshot urls generated during task execution.",
                "operationId": "get_task_screenshots_api_v1_task__task_id__screenshots_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskScreenshotsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/task/{task_id}/gif": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Get Task Gif",
                "description": "Returns a gif url generated from the screenshots of the task execution.\nOnly available for completed tasks that have screenshots.",
                "operationId": "get_task_gif_api_v1_task__task_id__gif_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGifResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tasks": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "List Tasks",
                "description": "Returns a paginated list of all tasks belonging to the user, ordered by creation date.\nEach task includes basic information like status and creation time. For detailed task info, use the\nget task endpoint.",
                "operationId": "list_tasks_api_v1_tasks_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTasksResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/scheduled-task": {
            "post": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Create Scheduled Task",
                "description": "Create a scheduled task to run at regular intervals or based on a cron expression.\nRequires an active subscription. Returns the scheduled task ID.",
                "operationId": "create_scheduled_task_api_v1_scheduled_task_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScheduledTaskRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskCreatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/scheduled-tasks": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "List Scheduled Tasks",
                "description": "Returns a paginated list of all scheduled tasks belonging to the user, ordered by creation date.\nEach task includes basic information like schedule type, next run time, and status.",
                "operationId": "list_scheduled_tasks_api_v1_scheduled_tasks_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListScheduledTasksResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/scheduled-task/{task_id}": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Get Scheduled Task",
                "description": "Returns detailed information about a specific scheduled task, including its schedule configuration\nand current status.",
                "operationId": "get_scheduled_task_api_v1_scheduled_task__task_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledTaskResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Update Scheduled Task",
                "description": "Update a scheduled task with partial updates.",
                "operationId": "update_scheduled_task_api_v1_scheduled_task__task_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateScheduledTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledTaskResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Delete Scheduled Task",
                "description": "Deletes a scheduled task. This will prevent any future runs of this task.\nAny currently running instances of this task will be allowed to complete.",
                "operationId": "delete_scheduled_task_api_v1_scheduled_task__task_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/delete-browser-profile-for-user": {
            "post": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Delete Browser Profile For User",
                "description": "Deletes the browser profile for the user.",
                "operationId": "delete_browser_profile_for_user_api_v1_delete_browser_profile_for_user_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/balance": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Check Balance",
                "description": "Returns the user's current API credit balance, which includes both monthly subscription\ncredits and any additional purchased credits. Required for monitoring usage and ensuring sufficient\ncredits for task execution.",
                "operationId": "check_balance_api_v1_balance_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckUserBalanceResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/me": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Me",
                "description": "Returns a boolean value indicating if the API key is valid and the user is authenticated.",
                "operationId": "me_api_v1_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Me Api V1 Me Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/ping": {
            "get": {
                "tags": [
                    "API v1.0"
                ],
                "summary": "Ping",
                "description": "Use this endpoint to check if the server is running and responding.",
                "operationId": "ping_api_v1_ping_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CheckUserBalanceResponse": {
                "properties": {
                    "balance": {
                        "type": "integer",
                        "title": "Balance"
                    }
                },
                "type": "object",
                "required": [
                    "balance"
                ],
                "title": "CheckUserBalanceResponse",
                "description": "balance: Current number of API credits available, value in cents (0.01 USD = 1 credit)"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "LLMModel": {
                "type": "string",
                "enum": [
                    "gpt-4o",
                    "gpt-4o-mini",
                    "gpt-4.1",
                    "gpt-4.1-mini",
                    "gemini-2.0-flash",
                    "gemini-2.0-flash-lite",
                    "claude-3-7-sonnet-20250219",
                    "llama-4-maverick-17b-128e-instruct"
                ],
                "title": "LLMModel"
            },
            "ListScheduledTasksResponse": {
                "properties": {
                    "tasks": {
                        "items": {
                            "$ref": "#/components/schemas/ScheduledTaskResponse"
                        },
                        "type": "array",
                        "title": "Tasks"
                    },
                    "total_pages": {
                        "type": "integer",
                        "title": "Total Pages"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "limit": {
                        "type": "integer",
                        "title": "Limit"
                    },
                    "total_count": {
                        "type": "integer",
                        "title": "Total Count"
                    }
                },
                "type": "object",
                "required": [
                    "tasks",
                    "total_pages",
                    "page",
                    "limit",
                    "total_count"
                ],
                "title": "ListScheduledTasksResponse",
                "description": "Response model for listing scheduled tasks."
            },
            "ListTasksResponse": {
                "properties": {
                    "tasks": {
                        "items": {
                            "$ref": "#/components/schemas/TaskSimpleResponse"
                        },
                        "type": "array",
                        "title": "Tasks"
                    },
                    "total_pages": {
                        "type": "integer",
                        "title": "Total Pages"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "limit": {
                        "type": "integer",
                        "title": "Limit"
                    },
                    "total_count": {
                        "type": "integer",
                        "title": "Total Count"
                    }
                },
                "type": "object",
                "required": [
                    "tasks",
                    "total_pages",
                    "page",
                    "limit",
                    "total_count"
                ],
                "title": "ListTasksResponse",
                "description": "total_pages: Total number of pages available\npage: Current page number\nlimit: Number of items per page\ntotal_count: Total number of tasks across all pages"
            },
            "RunTaskRequest": {
                "properties": {
                    "task": {
                        "type": "string",
                        "title": "Task"
                    },
                    "secrets": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secrets"
                    },
                    "allowed_domains": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allowed Domains"
                    },
                    "save_browser_data": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Save Browser Data",
                        "default": false
                    },
                    "structured_output_json": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Structured Output Json"
                    },
                    "llm_model": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LLMModel"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "use_adblock": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Use Adblock",
                        "default": true
                    },
                    "use_proxy": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Use Proxy",
                        "default": true
                    },
                    "highlight_elements": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Highlight Elements",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "task"
                ],
                "title": "RunTaskRequest",
                "description": "task: What should the agent do. You can try it out at https://cloud.browser-use.com/\n\nsecrets: Dictionary of secrets to be used by the agent. Secrets are safely encrypted before storing in the database.\n\nallowed_domains: List of domains that the agent is allowed to visit. If not set, the agent will be allowed to visit all domains (not recommended if you are using secrets).\n\nsave_browser_data: If set to True, the browser cookies and other data will be saved. Cookies are safely encrypted before storing in the database.\n\nstructured_output_json: If set, the agent will use this JSON schema as the output model (see example here: https://docs.browser-use.com/cloud/implementation#structured-output-example).\n\nuse_adblock: If set to True, the agent will use an adblocker.\n\nuse_proxy: If set to True, the agent will use a (mobile) proxy. Note that proxy is required for captcha solving, so if you disable proxy, you will not be able to solve captchas.\n\nhighlight_elements: If set to True, the agent will highlight the elements on the page."
            },
            "ScheduleType": {
                "type": "string",
                "enum": [
                    "interval",
                    "cron"
                ],
                "title": "ScheduleType"
            },
            "ScheduledTaskRequest": {
                "properties": {
                    "task": {
                        "type": "string",
                        "title": "Task"
                    },
                    "secrets": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secrets"
                    },
                    "allowed_domains": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allowed Domains"
                    },
                    "save_browser_data": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Save Browser Data",
                        "default": false
                    },
                    "structured_output_json": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Structured Output Json"
                    },
                    "llm_model": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LLMModel"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "use_adblock": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Use Adblock",
                        "default": true
                    },
                    "use_proxy": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Use Proxy",
                        "default": true
                    },
                    "highlight_elements": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Highlight Elements",
                        "default": true
                    },
                    "schedule_type": {
                        "$ref": "#/components/schemas/ScheduleType"
                    },
                    "interval_minutes": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Interval Minutes"
                    },
                    "cron_expression": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cron Expression"
                    },
                    "start_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start At"
                    },
                    "end_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End At"
                    }
                },
                "type": "object",
                "required": [
                    "task",
                    "schedule_type"
                ],
                "title": "ScheduledTaskRequest",
                "description": "schedule_type: Type of schedule to use (interval or cron)\ninterval_minutes: Minutes between runs (required for interval schedule)\ncron_expression: Cron expression for scheduling (required for cron schedule)\nstart_at: When to start the schedule (optional, defaults to now)\nend_at: When to end the schedule (optional, defaults to 1 year from now)\n\nNote: Secrets are not yet supported for scheduled tasks."
            },
            "ScheduledTaskResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "task": {
                        "type": "string",
                        "title": "Task"
                    },
                    "save_browser_data": {
                        "type": "boolean",
                        "title": "Save Browser Data"
                    },
                    "structured_output_json": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Structured Output Json"
                    },
                    "llm_model": {
                        "$ref": "#/components/schemas/LLMModel"
                    },
                    "use_adblock": {
                        "type": "boolean",
                        "title": "Use Adblock"
                    },
                    "use_proxy": {
                        "type": "boolean",
                        "title": "Use Proxy"
                    },
                    "highlight_elements": {
                        "type": "boolean",
                        "title": "Highlight Elements"
                    },
                    "schedule_type": {
                        "$ref": "#/components/schemas/ScheduleType"
                    },
                    "interval_minutes": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Interval Minutes"
                    },
                    "cron_expression": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cron Expression"
                    },
                    "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start At"
                    },
                    "next_run_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Next Run At"
                    },
                    "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End At"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "task",
                    "save_browser_data",
                    "llm_model",
                    "use_adblock",
                    "use_proxy",
                    "highlight_elements",
                    "schedule_type",
                    "start_at",
                    "next_run_at",
                    "end_at",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "title": "ScheduledTaskResponse",
                "description": "Response model for a single scheduled task."
            },
            "TaskBrowserDataResponse": {
                "properties": {
                    "cookies": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Cookies"
                    }
                },
                "type": "object",
                "required": [
                    "cookies"
                ],
                "title": "TaskBrowserDataResponse",
                "description": "cookies: List of cookies from the browser session\n\nThis field is only available if save_browser_data is set to True in the request."
            },
            "TaskCreatedResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "TaskCreatedResponse"
            },
            "TaskGifResponse": {
                "properties": {
                    "gif": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gif"
                    }
                },
                "type": "object",
                "required": [
                    "gif"
                ],
                "title": "TaskGifResponse"
            },
            "TaskMediaResponse": {
                "properties": {
                    "recordings": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Recordings"
                    }
                },
                "type": "object",
                "required": [
                    "recordings"
                ],
                "title": "TaskMediaResponse"
            },
            "TaskResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "task": {
                        "type": "string",
                        "title": "Task"
                    },
                    "live_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Live Url"
                    },
                    "output": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Output"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TaskStatusEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "finished_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Finished At"
                    },
                    "steps": {
                        "items": {
                            "$ref": "#/components/schemas/TaskStepResponse"
                        },
                        "type": "array",
                        "title": "Steps"
                    },
                    "browser_data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TaskBrowserDataResponse"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "task",
                    "output",
                    "status",
                    "created_at",
                    "steps"
                ],
                "title": "TaskResponse",
                "description": "output: Final output or result of the task (if completed)\nlive_url: URL to view live task execution. To preview the url you can directly integrate it in <iframe> tag. For example:\n        ```\n        <iframe src={live_url} width=\"600\" height=\"450\"></iframe>\n        ```\nWhich will display the task execution and allows you to control the agent live. It is pure VNC implementation.\n\nbrowser_data: Browser session data from the task (cookies). To enable this feature, you need to set `save_browser_data = True` in the request."
            },
            "TaskScreenshotsResponse": {
                "properties": {
                    "screenshots": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Screenshots"
                    }
                },
                "type": "object",
                "required": [
                    "screenshots"
                ],
                "title": "TaskScreenshotsResponse"
            },
            "TaskSimpleResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "task": {
                        "type": "string",
                        "title": "Task"
                    },
                    "output": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Output"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TaskStatusEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "finished_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Finished At"
                    },
                    "live_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Live Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "task",
                    "output",
                    "status",
                    "created_at"
                ],
                "title": "TaskSimpleResponse"
            },
            "TaskStatusEnum": {
                "type": "string",
                "enum": [
                    "created",
                    "running",
                    "finished",
                    "stopped",
                    "paused",
                    "failed"
                ],
                "title": "TaskStatusEnum",
                "description": "Enumeration of possible task states.\n\n- created: Task is initialized but not yet started\n- running: Task is currently executing\n- finished: Task has completed successfully\n- stopped: Task was manually stopped\n- paused: Task execution is temporarily paused\n- failed: Task encountered an error and could not complete"
            },
            "TaskStepResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "step": {
                        "type": "integer",
                        "title": "Step"
                    },
                    "evaluation_previous_goal": {
                        "type": "string",
                        "title": "Evaluation Previous Goal"
                    },
                    "next_goal": {
                        "type": "string",
                        "title": "Next Goal"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "step",
                    "evaluation_previous_goal",
                    "next_goal",
                    "url"
                ],
                "title": "TaskStepResponse",
                "description": "evaluation_previous_goal: Assessment of the previous goal's completion\nnext_goal: Description of what the next step aims to achieve"
            },
            "UpdateScheduledTaskRequest": {
                "properties": {
                    "task": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task"
                    },
                    "schedule_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ScheduleType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "interval_minutes": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Interval Minutes"
                    },
                    "cron_expression": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cron Expression"
                    },
                    "start_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start At"
                    },
                    "end_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End At"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active"
                    },
                    "use_adblock": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Use Adblock"
                    },
                    "use_proxy": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Use Proxy"
                    },
                    "highlight_elements": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Highlight Elements"
                    },
                    "llm_model": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LLMModel"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "save_browser_data": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Save Browser Data"
                    },
                    "structured_output_json": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Structured Output Json"
                    }
                },
                "type": "object",
                "title": "UpdateScheduledTaskRequest",
                "description": "Request model for updating individual fields of a scheduled task."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}